// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator client {
  provider = "prisma-client-js"
}

generator nestgraphql {
  provider               = "node node_modules/prisma-nestjs-graphql"
  output                 = "../src/@generated/prisma-nestjs-graphql"
  fields_Validator_from  = "class-validator"
  fields_Validator_input = true
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  /// @Validator.IsEmail()
  email            String        @unique
  /// @Validator.MinLength(2)
  /// @Validator.IsString()
  name             String
  /// @Validator.MinLength(6)
  /// @Validator.IsString()
  password         String
  transactionsTo   Transaction[] @relation("Reciever")
  transactionsFrom Transaction[] @relation("Sender")
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  Balance          Balance[]
}

model Transaction {
  id             Int      @id @default(autoincrement())
  reciever       User     @relation(name: "Reciever", fields: [recieverId], references: [id])
  recieverId     Int
  sender         User     @relation(name: "Sender", fields: [senderId], references: [id])
  senderId       Int
  /// @Validator.IsNumber()
  amount         Int
  /// @Validator.IsString()
  sourceCurrency String
  targetCurrency String
  exchangeRate   Float
  status         Int
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Balance {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  /// @Validator.IsNumber()
  amount    Float
  /// @Validator.IsString()
  currency  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
